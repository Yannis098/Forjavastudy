参数化类型：

在除C++外的大部分OOP语言中，所有的类都继承于一个单一的基类，这叫做单根继承结构。

这种结构有一定的好处，比如所有的类都有共同的接口 可以相对的节省很多时间。

同时在使用容器的时候，可以不拘束于放入容器的Object的类型，而可以把它们都看作是为Object类，这是将你要存入的类型向上转型为Object类。

但是当你想要将容器内的对象拿出时，如何将其变回原本类型的对象呢，如何将原有的实用接口复原呢。

在这里也许会想到向下转型，但这是十分危险的，因为你不清楚你所放入的对象的具体类型――可能会引发异常。

所以建立一种可以记住所放入对象具体类型的容器就变得十分有必要。参数化类型就是一种可以自动定制作用于特定类型上的类。

例如可以通过参数化类型定制一个只接纳和取出shape对象的容器。

ArrayList<shape> shapes=new ArrayList<shape>();
